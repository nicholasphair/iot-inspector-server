# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Upload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_status_text=None, dns_dict=None, syn_scan_dict=None, flow_dict=None, device_dict=None, ua_dict=None, dhcp_dict=None, resolver_dict=None, client_version=None, tls_dict_list=None, netdisco_dict=None, duration=None, client_ts=None):  # noqa: E501
        """Upload - a model defined in OpenAPI

        :param client_status_text: The client_status_text of this Upload.  # noqa: E501
        :type client_status_text: str
        :param dns_dict: The dns_dict of this Upload.  # noqa: E501
        :type dns_dict: str
        :param syn_scan_dict: The syn_scan_dict of this Upload.  # noqa: E501
        :type syn_scan_dict: str
        :param flow_dict: The flow_dict of this Upload.  # noqa: E501
        :type flow_dict: str
        :param device_dict: The device_dict of this Upload.  # noqa: E501
        :type device_dict: str
        :param ua_dict: The ua_dict of this Upload.  # noqa: E501
        :type ua_dict: str
        :param dhcp_dict: The dhcp_dict of this Upload.  # noqa: E501
        :type dhcp_dict: str
        :param resolver_dict: The resolver_dict of this Upload.  # noqa: E501
        :type resolver_dict: str
        :param client_version: The client_version of this Upload.  # noqa: E501
        :type client_version: str
        :param tls_dict_list: The tls_dict_list of this Upload.  # noqa: E501
        :type tls_dict_list: str
        :param netdisco_dict: The netdisco_dict of this Upload.  # noqa: E501
        :type netdisco_dict: str
        :param duration: The duration of this Upload.  # noqa: E501
        :type duration: str
        :param client_ts: The client_ts of this Upload.  # noqa: E501
        :type client_ts: str
        """
        self.openapi_types = {
            'client_status_text': str,
            'dns_dict': str,
            'syn_scan_dict': str,
            'flow_dict': str,
            'device_dict': str,
            'ua_dict': str,
            'dhcp_dict': str,
            'resolver_dict': str,
            'client_version': str,
            'tls_dict_list': str,
            'netdisco_dict': str,
            'duration': str,
            'client_ts': str
        }

        self.attribute_map = {
            'client_status_text': 'client_status_text',
            'dns_dict': 'dns_dict',
            'syn_scan_dict': 'syn_scan_dict',
            'flow_dict': 'flow_dict',
            'device_dict': 'device_dict',
            'ua_dict': 'ua_dict',
            'dhcp_dict': 'dhcp_dict',
            'resolver_dict': 'resolver_dict',
            'client_version': 'client_version',
            'tls_dict_list': 'tls_dict_list',
            'netdisco_dict': 'netdisco_dict',
            'duration': 'duration',
            'client_ts': 'client_ts'
        }

        self._client_status_text = client_status_text
        self._dns_dict = dns_dict
        self._syn_scan_dict = syn_scan_dict
        self._flow_dict = flow_dict
        self._device_dict = device_dict
        self._ua_dict = ua_dict
        self._dhcp_dict = dhcp_dict
        self._resolver_dict = resolver_dict
        self._client_version = client_version
        self._tls_dict_list = tls_dict_list
        self._netdisco_dict = netdisco_dict
        self._duration = duration
        self._client_ts = client_ts

    @classmethod
    def from_dict(cls, dikt) -> 'Upload':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The upload of this Upload.  # noqa: E501
        :rtype: Upload
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_status_text(self):
        """Gets the client_status_text of this Upload.


        :return: The client_status_text of this Upload.
        :rtype: str
        """
        return self._client_status_text

    @client_status_text.setter
    def client_status_text(self, client_status_text):
        """Sets the client_status_text of this Upload.


        :param client_status_text: The client_status_text of this Upload.
        :type client_status_text: str
        """

        self._client_status_text = client_status_text

    @property
    def dns_dict(self):
        """Gets the dns_dict of this Upload.


        :return: The dns_dict of this Upload.
        :rtype: str
        """
        return self._dns_dict

    @dns_dict.setter
    def dns_dict(self, dns_dict):
        """Sets the dns_dict of this Upload.


        :param dns_dict: The dns_dict of this Upload.
        :type dns_dict: str
        """

        self._dns_dict = dns_dict

    @property
    def syn_scan_dict(self):
        """Gets the syn_scan_dict of this Upload.


        :return: The syn_scan_dict of this Upload.
        :rtype: str
        """
        return self._syn_scan_dict

    @syn_scan_dict.setter
    def syn_scan_dict(self, syn_scan_dict):
        """Sets the syn_scan_dict of this Upload.


        :param syn_scan_dict: The syn_scan_dict of this Upload.
        :type syn_scan_dict: str
        """

        self._syn_scan_dict = syn_scan_dict

    @property
    def flow_dict(self):
        """Gets the flow_dict of this Upload.


        :return: The flow_dict of this Upload.
        :rtype: str
        """
        return self._flow_dict

    @flow_dict.setter
    def flow_dict(self, flow_dict):
        """Sets the flow_dict of this Upload.


        :param flow_dict: The flow_dict of this Upload.
        :type flow_dict: str
        """

        self._flow_dict = flow_dict

    @property
    def device_dict(self):
        """Gets the device_dict of this Upload.


        :return: The device_dict of this Upload.
        :rtype: str
        """
        return self._device_dict

    @device_dict.setter
    def device_dict(self, device_dict):
        """Sets the device_dict of this Upload.


        :param device_dict: The device_dict of this Upload.
        :type device_dict: str
        """

        self._device_dict = device_dict

    @property
    def ua_dict(self):
        """Gets the ua_dict of this Upload.


        :return: The ua_dict of this Upload.
        :rtype: str
        """
        return self._ua_dict

    @ua_dict.setter
    def ua_dict(self, ua_dict):
        """Sets the ua_dict of this Upload.


        :param ua_dict: The ua_dict of this Upload.
        :type ua_dict: str
        """

        self._ua_dict = ua_dict

    @property
    def dhcp_dict(self):
        """Gets the dhcp_dict of this Upload.


        :return: The dhcp_dict of this Upload.
        :rtype: str
        """
        return self._dhcp_dict

    @dhcp_dict.setter
    def dhcp_dict(self, dhcp_dict):
        """Sets the dhcp_dict of this Upload.


        :param dhcp_dict: The dhcp_dict of this Upload.
        :type dhcp_dict: str
        """

        self._dhcp_dict = dhcp_dict

    @property
    def resolver_dict(self):
        """Gets the resolver_dict of this Upload.


        :return: The resolver_dict of this Upload.
        :rtype: str
        """
        return self._resolver_dict

    @resolver_dict.setter
    def resolver_dict(self, resolver_dict):
        """Sets the resolver_dict of this Upload.


        :param resolver_dict: The resolver_dict of this Upload.
        :type resolver_dict: str
        """

        self._resolver_dict = resolver_dict

    @property
    def client_version(self):
        """Gets the client_version of this Upload.


        :return: The client_version of this Upload.
        :rtype: str
        """
        return self._client_version

    @client_version.setter
    def client_version(self, client_version):
        """Sets the client_version of this Upload.


        :param client_version: The client_version of this Upload.
        :type client_version: str
        """

        self._client_version = client_version

    @property
    def tls_dict_list(self):
        """Gets the tls_dict_list of this Upload.


        :return: The tls_dict_list of this Upload.
        :rtype: str
        """
        return self._tls_dict_list

    @tls_dict_list.setter
    def tls_dict_list(self, tls_dict_list):
        """Sets the tls_dict_list of this Upload.


        :param tls_dict_list: The tls_dict_list of this Upload.
        :type tls_dict_list: str
        """

        self._tls_dict_list = tls_dict_list

    @property
    def netdisco_dict(self):
        """Gets the netdisco_dict of this Upload.


        :return: The netdisco_dict of this Upload.
        :rtype: str
        """
        return self._netdisco_dict

    @netdisco_dict.setter
    def netdisco_dict(self, netdisco_dict):
        """Sets the netdisco_dict of this Upload.


        :param netdisco_dict: The netdisco_dict of this Upload.
        :type netdisco_dict: str
        """

        self._netdisco_dict = netdisco_dict

    @property
    def duration(self):
        """Gets the duration of this Upload.


        :return: The duration of this Upload.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this Upload.


        :param duration: The duration of this Upload.
        :type duration: str
        """

        self._duration = duration

    @property
    def client_ts(self):
        """Gets the client_ts of this Upload.


        :return: The client_ts of this Upload.
        :rtype: str
        """
        return self._client_ts

    @client_ts.setter
    def client_ts(self, client_ts):
        """Sets the client_ts of this Upload.


        :param client_ts: The client_ts of this Upload.
        :type client_ts: str
        """

        self._client_ts = client_ts
